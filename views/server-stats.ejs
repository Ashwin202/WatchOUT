<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/img/WatchOUT(32x32).png">
  <link rel="icon" type="image/png" sizes="96x96" href="/assets/img/WatchOUT(96x96).png">
  <link rel="icon" type="image/png" sizes="16x16" href="/assets/img/WatchOUT(144x144).png">
  <link rel="stylesheet" href="/assets/css/main.css" preload="true" as="style" />
  <link rel="stylesheet" href="/assets/css/toaster.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"
    integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css"
    crossorigin="anonymous" referrerpolicy="no-referrer" />

  <title>WatchOUT</title>


</head>

<body>
  <div class="d-flex">
    <%- include('sidebar.ejs') %>

      <div class="content flex-grow-1">
        <button class="btn btn-dark sidebar-toggle" onclick="toggleSidebar()">â˜°</button>
        <div class="container">
          <div class="inter-xxl-bold">Server Vitals</div>
          <div class="row mt-2">
            
          </div>
          <div class="row mt-3">
            <div class="col-md-4">
              <div class="card p-3 h-100">
                <div class="inter-xl-bold">Load Average</div>
                <canvas id="loadAverageChart" width="400" height="200"></canvas>
                <p><strong>Load Average (5m):</strong> <span id="loadAverage">0.34</span></p>
                <p><strong>System Uptime:</strong> <span id="uptime">16258.2 ms</span></p>
              </div>
            </div>
            <div class="col-md-4 chart-parent-card">
              <div class="card p-3 h-100">
                <div class="inter-xl-bold">CPU Usage</div>
                <canvas class="chart-card" id="cpuUsageChart"></canvas>
                <p><strong>Number of CPUs:</strong> <span id="cpus">16258.2 ms</span></p>
                <!-- <div class="inter-md text-center">Number of CPUs:<span id="cpus"></span></div> -->

              </div>
            </div>
            <div class="col-md-4 chart-parent-card">
              <div class="card p-3 h-100">
                <div class="inter-xl-bold">Memory Usage</div>
                <canvas id="memoryUsageChart" class="chart-card"></canvas>
                <p><strong>Memory:</strong> <span id="freeMemory">16258.2 ms</span>/<span id="totalMemory"></span></p>
                <!-- <div class="inter-md text-center"><span id="freeMemory"></span>/<span id="totalMemory"></span></div> -->

              </div>
            </div>
          </div>
        </div>
      </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
  <script src="https://cdn.datatables.net/2.1.2/js/dataTables.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" crossorigin="anonymous"
    referrerpolicy="no-referrer"></script>
  <script src="/assets/js/main.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js"
    integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"
    integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
    crossorigin="anonymous"></script>


  <script>
    function loadPage(page) {
      $('#content-area').load(page, function () {
        const sidebar = document.getElementById('sidebar');
        if (window.innerWidth <= 768) {
          sidebar.classList.remove('open');
        }
      });
    }

    function toggleSidebar() {
      const sidebar = document.getElementById('sidebar');
      sidebar.classList.toggle('open');
    }


    $(document).ready(() => {
      const platform = 'Linux';
      const cpus = 4;
      const loadAverage = 0.34;
      const totalMemory = 8942.87890625;
      const freeMemory = 5796.7109375;
      const freeMemoryPercent = (freeMemory / totalMemory * 100).toFixed(2);
      const uptime = 16258.2;
      const cpuUsage = (0.03562340966921118 * 100).toFixed(2);

      document.getElementById('cpus').textContent = cpus;
      document.getElementById('loadAverage').textContent = loadAverage;
      document.getElementById('totalMemory').textContent = `${totalMemory.toFixed(2)} MB`;
      document.getElementById('freeMemory').textContent = `${freeMemory.toFixed(2)} MB`;
      document.getElementById('uptime').textContent = `${uptime} ms`;

      const cpuUsageData = {
        labels: ['Used', 'Free'],
        datasets: [{
          data: [cpuUsage, 100 - cpuUsage],
          backgroundColor: ['#3b4252', '#bf616a']
        }]
      };

      const memoryUsageData = {
        labels: ['Used', 'Free'],
        datasets: [{
          data: [(totalMemory - freeMemory).toFixed(2), freeMemory.toFixed(2)],
          backgroundColor: ['#6bce9b', '#f9ef74']
        }]
      };

      const cpuUsageChart = new Chart(document.getElementById('cpuUsageChart'), {
        type: 'doughnut',
        data: cpuUsageData,
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top'
            }
          }
        }
      });

      const memoryUsageChart = new Chart(document.getElementById('memoryUsageChart'), {
        type: 'doughnut',
        data: memoryUsageData,
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top'
            }
          }
        }
      });
      const ctx = document.getElementById('loadAverageChart').getContext('2d');
      const loadAverageChart = new Chart(ctx, {
          type: 'bar',
          data: {
              labels: ['Load Average (5m)'],
              datasets: [{
                  label: 'Load Average',
                  data: [0.34], // Replace with your dynamic load average value
                  backgroundColor: 'rgba(75, 192, 192, 0.2)',
                  borderColor: 'rgba(75, 192, 192, 1)',
                  borderWidth: 1
              }]
          },
          options: {
              scales: {
                  y: {
                      beginAtZero: true,
                      max: 2 // Adjust based on expected range
                  }
              }
          }
      });
    })
  </script>
</body>

</html>